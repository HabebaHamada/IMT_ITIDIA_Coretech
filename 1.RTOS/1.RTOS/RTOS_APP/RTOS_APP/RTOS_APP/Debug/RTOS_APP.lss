
RTOS_APP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000560  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000002  00800060  00000560  000005f4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000f7  00800062  00800062  000005f6  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005f6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000628  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000fef  00000000  00000000  000007ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000871  00000000  00000000  0000179b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000859  00000000  00000000  0000200c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000025c  00000000  00000000  00002868  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000674  00000000  00000000  00002ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000055e  00000000  00000000  00003138  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00003696  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 a2 01 	jmp	0x344	; 0x344 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 e6       	ldi	r30, 0x60	; 96
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a2 36       	cpi	r26, 0x62	; 98
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	21 e0       	ldi	r18, 0x01	; 1
  78:	a2 e6       	ldi	r26, 0x62	; 98
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a9 35       	cpi	r26, 0x59	; 89
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 8d 00 	call	0x11a	; 0x11a <main>
  8a:	0c 94 ae 02 	jmp	0x55c	; 0x55c <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <LED_TOG1>:
    }
}

void LED_TOG1(void){
	static u8 OV_counter=0;
	OV_counter++;
  92:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <OV_counter.1808>
  96:	8f 5f       	subi	r24, 0xFF	; 255
  98:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <OV_counter.1808>
	if(OV_counter==31)
  9c:	8f 31       	cpi	r24, 0x1F	; 31
  9e:	49 f4       	brne	.+18     	; 0xb2 <LED_TOG1+0x20>
	{
		TCNT0=preload_value;
  a0:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  a4:	82 bf       	out	0x32, r24	; 50
		OV_counter=0;
  a6:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <OV_counter.1808>
		MDIO_VoidTogglePin(PORTA,0);
  aa:	60 e0       	ldi	r22, 0x00	; 0
  ac:	80 e0       	ldi	r24, 0x00	; 0
  ae:	0e 94 55 01 	call	0x2aa	; 0x2aa <MDIO_VoidTogglePin>
  b2:	08 95       	ret

000000b4 <LED_TOG2>:
	}
}

void LED_TOG2(void){
   static u8 OV_counter=0;
   OV_counter++;
  b4:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <OV_counter.1812>
  b8:	8f 5f       	subi	r24, 0xFF	; 255
  ba:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <OV_counter.1812>
   if(OV_counter==31)
  be:	8f 31       	cpi	r24, 0x1F	; 31
  c0:	49 f4       	brne	.+18     	; 0xd4 <LED_TOG2+0x20>
   {
	TCNT0=preload_value;
  c2:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  c6:	82 bf       	out	0x32, r24	; 50
	OV_counter=0;
  c8:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <OV_counter.1812>
	MDIO_VoidTogglePin(PORTA,1);
  cc:	61 e0       	ldi	r22, 0x01	; 1
  ce:	80 e0       	ldi	r24, 0x00	; 0
  d0:	0e 94 55 01 	call	0x2aa	; 0x2aa <MDIO_VoidTogglePin>
  d4:	08 95       	ret

000000d6 <LED_TOG3>:
   }
}

void LED_TOG3(void){
	static u8 OV_counter=0;
	OV_counter++;
  d6:	80 91 63 00 	lds	r24, 0x0063	; 0x800063 <OV_counter.1816>
  da:	8f 5f       	subi	r24, 0xFF	; 255
  dc:	80 93 63 00 	sts	0x0063, r24	; 0x800063 <OV_counter.1816>
	if(OV_counter==31)
  e0:	8f 31       	cpi	r24, 0x1F	; 31
  e2:	49 f4       	brne	.+18     	; 0xf6 <LED_TOG3+0x20>
	{
		TCNT0=preload_value;
  e4:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  e8:	82 bf       	out	0x32, r24	; 50
		OV_counter=0;
  ea:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <OV_counter.1816>
		MDIO_VoidTogglePin(PORTA,2);
  ee:	62 e0       	ldi	r22, 0x02	; 2
  f0:	80 e0       	ldi	r24, 0x00	; 0
  f2:	0e 94 55 01 	call	0x2aa	; 0x2aa <MDIO_VoidTogglePin>
  f6:	08 95       	ret

000000f8 <LED_TOG4>:
	}
}

void LED_TOG4(void){
	static u8 OV_counter=0;
	OV_counter++;
  f8:	80 91 62 00 	lds	r24, 0x0062	; 0x800062 <__data_end>
  fc:	8f 5f       	subi	r24, 0xFF	; 255
  fe:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <__data_end>
	if(OV_counter==31)
 102:	8f 31       	cpi	r24, 0x1F	; 31
 104:	49 f4       	brne	.+18     	; 0x118 <LED_TOG4+0x20>
	{
		TCNT0=preload_value;
 106:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 10a:	82 bf       	out	0x32, r24	; 50
		OV_counter=0;
 10c:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__data_end>
		MDIO_VoidTogglePin(PORTA,3);
 110:	63 e0       	ldi	r22, 0x03	; 3
 112:	80 e0       	ldi	r24, 0x00	; 0
 114:	0e 94 55 01 	call	0x2aa	; 0x2aa <MDIO_VoidTogglePin>
 118:	08 95       	ret

0000011a <main>:

int main(void)
{
    /* Replace with your application code */
	
		RTOS_u8CreateTask(LED_TOG1,0,1,0);
 11a:	20 e0       	ldi	r18, 0x00	; 0
 11c:	30 e0       	ldi	r19, 0x00	; 0
 11e:	41 e0       	ldi	r20, 0x01	; 1
 120:	50 e0       	ldi	r21, 0x00	; 0
 122:	60 e0       	ldi	r22, 0x00	; 0
 124:	89 e4       	ldi	r24, 0x49	; 73
 126:	90 e0       	ldi	r25, 0x00	; 0
 128:	0e 94 73 02 	call	0x4e6	; 0x4e6 <RTOS_u8CreateTask>
	    RTOS_u8CreateTask(LED_TOG2,1, 2,0);
 12c:	20 e0       	ldi	r18, 0x00	; 0
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	42 e0       	ldi	r20, 0x02	; 2
 132:	50 e0       	ldi	r21, 0x00	; 0
 134:	61 e0       	ldi	r22, 0x01	; 1
 136:	8a e5       	ldi	r24, 0x5A	; 90
 138:	90 e0       	ldi	r25, 0x00	; 0
 13a:	0e 94 73 02 	call	0x4e6	; 0x4e6 <RTOS_u8CreateTask>
	    RTOS_u8CreateTask(LED_TOG3,2, 4,0);
 13e:	20 e0       	ldi	r18, 0x00	; 0
 140:	30 e0       	ldi	r19, 0x00	; 0
 142:	44 e0       	ldi	r20, 0x04	; 4
 144:	50 e0       	ldi	r21, 0x00	; 0
 146:	62 e0       	ldi	r22, 0x02	; 2
 148:	8b e6       	ldi	r24, 0x6B	; 107
 14a:	90 e0       	ldi	r25, 0x00	; 0
 14c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <RTOS_u8CreateTask>
	    RTOS_u8CreateTask(LED_TOG4,3,10,0);
 150:	20 e0       	ldi	r18, 0x00	; 0
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	4a e0       	ldi	r20, 0x0A	; 10
 156:	50 e0       	ldi	r21, 0x00	; 0
 158:	63 e0       	ldi	r22, 0x03	; 3
 15a:	8c e7       	ldi	r24, 0x7C	; 124
 15c:	90 e0       	ldi	r25, 0x00	; 0
 15e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <RTOS_u8CreateTask>
		  
		  
	MDIO_VoidSetPortDirection(PORTA,0xff);
 162:	6f ef       	ldi	r22, 0xFF	; 255
 164:	80 e0       	ldi	r24, 0x00	; 0
 166:	0e 94 45 01 	call	0x28a	; 0x28a <MDIO_VoidSetPortDirection>
	
	
		MDIO_VoidSetPinValue(PORTA,0,1);
 16a:	41 e0       	ldi	r20, 0x01	; 1
 16c:	60 e0       	ldi	r22, 0x00	; 0
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	0e 94 d5 00 	call	0x1aa	; 0x1aa <MDIO_VoidSetPinValue>
		MDIO_VoidSetPinValue(PORTA,1,1);
 174:	41 e0       	ldi	r20, 0x01	; 1
 176:	61 e0       	ldi	r22, 0x01	; 1
 178:	80 e0       	ldi	r24, 0x00	; 0
 17a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <MDIO_VoidSetPinValue>
		MDIO_VoidSetPinValue(PORTA,2,1);
 17e:	41 e0       	ldi	r20, 0x01	; 1
 180:	62 e0       	ldi	r22, 0x02	; 2
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	0e 94 d5 00 	call	0x1aa	; 0x1aa <MDIO_VoidSetPinValue>
		MDIO_VoidSetPinValue(PORTA,3,1);
 188:	41 e0       	ldi	r20, 0x01	; 1
 18a:	63 e0       	ldi	r22, 0x03	; 3
 18c:	80 e0       	ldi	r24, 0x00	; 0
 18e:	0e 94 d5 00 	call	0x1aa	; 0x1aa <MDIO_VoidSetPinValue>
	
	MTimer0_VoidSetTCNT(123);
 192:	8b e7       	ldi	r24, 0x7B	; 123
 194:	0e 94 94 01 	call	0x328	; 0x328 <MTimer0_VoidSetTCNT>
	MTimer0_VoidInitOV();
 198:	0e 94 8d 01 	call	0x31a	; 0x31a <MTimer0_VoidInitOV>
	MTimer0_ViodEnableTimer();
 19c:	0e 94 98 01 	call	0x330	; 0x330 <MTimer0_ViodEnableTimer>
	
	MGIE_VoidEnable();
 1a0:	0e 94 89 01 	call	0x312	; 0x312 <MGIE_VoidEnable>
	


      RTOS_voidStartOS();
 1a4:	0e 94 a9 02 	call	0x552	; 0x552 <RTOS_voidStartOS>
 1a8:	ff cf       	rjmp	.-2      	; 0x1a8 <main+0x8e>

000001aa <MDIO_VoidSetPinValue>:
	switch(Copy_U8Port)
	{
		case PORTA: PORTA_REG=Copy_U8Value; break;
		case PORTB: PORTB_REG=Copy_U8Value; break;
		case PORTC: PORTC_REG=Copy_U8Value; break;
		case PORTD: PORTD_REG=Copy_U8Value; break;
 1aa:	41 30       	cpi	r20, 0x01	; 1
 1ac:	a1 f5       	brne	.+104    	; 0x216 <MDIO_VoidSetPinValue+0x6c>
 1ae:	81 30       	cpi	r24, 0x01	; 1
 1b0:	89 f0       	breq	.+34     	; 0x1d4 <MDIO_VoidSetPinValue+0x2a>
 1b2:	28 f0       	brcs	.+10     	; 0x1be <MDIO_VoidSetPinValue+0x14>
 1b4:	82 30       	cpi	r24, 0x02	; 2
 1b6:	c9 f0       	breq	.+50     	; 0x1ea <MDIO_VoidSetPinValue+0x40>
 1b8:	83 30       	cpi	r24, 0x03	; 3
 1ba:	11 f1       	breq	.+68     	; 0x200 <MDIO_VoidSetPinValue+0x56>
 1bc:	08 95       	ret
 1be:	2b b3       	in	r18, 0x1b	; 27
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	02 c0       	rjmp	.+4      	; 0x1ca <MDIO_VoidSetPinValue+0x20>
 1c6:	88 0f       	add	r24, r24
 1c8:	99 1f       	adc	r25, r25
 1ca:	6a 95       	dec	r22
 1cc:	e2 f7       	brpl	.-8      	; 0x1c6 <MDIO_VoidSetPinValue+0x1c>
 1ce:	82 2b       	or	r24, r18
 1d0:	8b bb       	out	0x1b, r24	; 27
 1d2:	08 95       	ret
 1d4:	28 b3       	in	r18, 0x18	; 24
 1d6:	81 e0       	ldi	r24, 0x01	; 1
 1d8:	90 e0       	ldi	r25, 0x00	; 0
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <MDIO_VoidSetPinValue+0x36>
 1dc:	88 0f       	add	r24, r24
 1de:	99 1f       	adc	r25, r25
 1e0:	6a 95       	dec	r22
 1e2:	e2 f7       	brpl	.-8      	; 0x1dc <MDIO_VoidSetPinValue+0x32>
 1e4:	82 2b       	or	r24, r18
 1e6:	88 bb       	out	0x18, r24	; 24
 1e8:	08 95       	ret
 1ea:	25 b3       	in	r18, 0x15	; 21
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	02 c0       	rjmp	.+4      	; 0x1f6 <MDIO_VoidSetPinValue+0x4c>
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	6a 95       	dec	r22
 1f8:	e2 f7       	brpl	.-8      	; 0x1f2 <MDIO_VoidSetPinValue+0x48>
 1fa:	82 2b       	or	r24, r18
 1fc:	85 bb       	out	0x15, r24	; 21
 1fe:	08 95       	ret
 200:	22 b3       	in	r18, 0x12	; 18
 202:	81 e0       	ldi	r24, 0x01	; 1
 204:	90 e0       	ldi	r25, 0x00	; 0
 206:	02 c0       	rjmp	.+4      	; 0x20c <MDIO_VoidSetPinValue+0x62>
 208:	88 0f       	add	r24, r24
 20a:	99 1f       	adc	r25, r25
 20c:	6a 95       	dec	r22
 20e:	e2 f7       	brpl	.-8      	; 0x208 <MDIO_VoidSetPinValue+0x5e>
 210:	82 2b       	or	r24, r18
 212:	82 bb       	out	0x12, r24	; 18
 214:	08 95       	ret
 216:	41 11       	cpse	r20, r1
 218:	37 c0       	rjmp	.+110    	; 0x288 <MDIO_VoidSetPinValue+0xde>
 21a:	81 30       	cpi	r24, 0x01	; 1
 21c:	91 f0       	breq	.+36     	; 0x242 <MDIO_VoidSetPinValue+0x98>
 21e:	28 f0       	brcs	.+10     	; 0x22a <MDIO_VoidSetPinValue+0x80>
 220:	82 30       	cpi	r24, 0x02	; 2
 222:	d9 f0       	breq	.+54     	; 0x25a <MDIO_VoidSetPinValue+0xb0>
 224:	83 30       	cpi	r24, 0x03	; 3
 226:	29 f1       	breq	.+74     	; 0x272 <MDIO_VoidSetPinValue+0xc8>
 228:	08 95       	ret
 22a:	2b b3       	in	r18, 0x1b	; 27
 22c:	81 e0       	ldi	r24, 0x01	; 1
 22e:	90 e0       	ldi	r25, 0x00	; 0
 230:	02 c0       	rjmp	.+4      	; 0x236 <MDIO_VoidSetPinValue+0x8c>
 232:	88 0f       	add	r24, r24
 234:	99 1f       	adc	r25, r25
 236:	6a 95       	dec	r22
 238:	e2 f7       	brpl	.-8      	; 0x232 <MDIO_VoidSetPinValue+0x88>
 23a:	80 95       	com	r24
 23c:	82 23       	and	r24, r18
 23e:	8b bb       	out	0x1b, r24	; 27
 240:	08 95       	ret
 242:	28 b3       	in	r18, 0x18	; 24
 244:	81 e0       	ldi	r24, 0x01	; 1
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	02 c0       	rjmp	.+4      	; 0x24e <MDIO_VoidSetPinValue+0xa4>
 24a:	88 0f       	add	r24, r24
 24c:	99 1f       	adc	r25, r25
 24e:	6a 95       	dec	r22
 250:	e2 f7       	brpl	.-8      	; 0x24a <MDIO_VoidSetPinValue+0xa0>
 252:	80 95       	com	r24
 254:	82 23       	and	r24, r18
 256:	88 bb       	out	0x18, r24	; 24
 258:	08 95       	ret
 25a:	25 b3       	in	r18, 0x15	; 21
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	02 c0       	rjmp	.+4      	; 0x266 <MDIO_VoidSetPinValue+0xbc>
 262:	88 0f       	add	r24, r24
 264:	99 1f       	adc	r25, r25
 266:	6a 95       	dec	r22
 268:	e2 f7       	brpl	.-8      	; 0x262 <MDIO_VoidSetPinValue+0xb8>
 26a:	80 95       	com	r24
 26c:	82 23       	and	r24, r18
 26e:	85 bb       	out	0x15, r24	; 21
 270:	08 95       	ret
 272:	22 b3       	in	r18, 0x12	; 18
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	02 c0       	rjmp	.+4      	; 0x27e <MDIO_VoidSetPinValue+0xd4>
 27a:	88 0f       	add	r24, r24
 27c:	99 1f       	adc	r25, r25
 27e:	6a 95       	dec	r22
 280:	e2 f7       	brpl	.-8      	; 0x27a <MDIO_VoidSetPinValue+0xd0>
 282:	80 95       	com	r24
 284:	82 23       	and	r24, r18
 286:	82 bb       	out	0x12, r24	; 18
 288:	08 95       	ret

0000028a <MDIO_VoidSetPortDirection>:
 28a:	81 30       	cpi	r24, 0x01	; 1
 28c:	41 f0       	breq	.+16     	; 0x29e <MDIO_VoidSetPortDirection+0x14>
 28e:	28 f0       	brcs	.+10     	; 0x29a <MDIO_VoidSetPortDirection+0x10>
 290:	82 30       	cpi	r24, 0x02	; 2
 292:	39 f0       	breq	.+14     	; 0x2a2 <MDIO_VoidSetPortDirection+0x18>
 294:	83 30       	cpi	r24, 0x03	; 3
 296:	39 f0       	breq	.+14     	; 0x2a6 <MDIO_VoidSetPortDirection+0x1c>
 298:	08 95       	ret
 29a:	6a bb       	out	0x1a, r22	; 26
 29c:	08 95       	ret
 29e:	67 bb       	out	0x17, r22	; 23
 2a0:	08 95       	ret
 2a2:	64 bb       	out	0x14, r22	; 20
 2a4:	08 95       	ret
 2a6:	61 bb       	out	0x11, r22	; 17
 2a8:	08 95       	ret

000002aa <MDIO_VoidTogglePin>:
	}
}
void MDIO_VoidTogglePin(u8 Copy_U8Port,u8 Copy_U8Pin)
{
	switch(Copy_U8Port)
 2aa:	81 30       	cpi	r24, 0x01	; 1
 2ac:	89 f0       	breq	.+34     	; 0x2d0 <MDIO_VoidTogglePin+0x26>
 2ae:	28 f0       	brcs	.+10     	; 0x2ba <MDIO_VoidTogglePin+0x10>
 2b0:	82 30       	cpi	r24, 0x02	; 2
 2b2:	c9 f0       	breq	.+50     	; 0x2e6 <MDIO_VoidTogglePin+0x3c>
 2b4:	83 30       	cpi	r24, 0x03	; 3
 2b6:	11 f1       	breq	.+68     	; 0x2fc <MDIO_VoidTogglePin+0x52>
 2b8:	08 95       	ret
	{
		case PORTA: TOGGLE_BIT(PORTA_REG,Copy_U8Pin); break;
 2ba:	2b b3       	in	r18, 0x1b	; 27
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	02 c0       	rjmp	.+4      	; 0x2c6 <MDIO_VoidTogglePin+0x1c>
 2c2:	88 0f       	add	r24, r24
 2c4:	99 1f       	adc	r25, r25
 2c6:	6a 95       	dec	r22
 2c8:	e2 f7       	brpl	.-8      	; 0x2c2 <MDIO_VoidTogglePin+0x18>
 2ca:	82 27       	eor	r24, r18
 2cc:	8b bb       	out	0x1b, r24	; 27
 2ce:	08 95       	ret
		case PORTB: TOGGLE_BIT(PORTB_REG,Copy_U8Pin); break;
 2d0:	28 b3       	in	r18, 0x18	; 24
 2d2:	81 e0       	ldi	r24, 0x01	; 1
 2d4:	90 e0       	ldi	r25, 0x00	; 0
 2d6:	02 c0       	rjmp	.+4      	; 0x2dc <MDIO_VoidTogglePin+0x32>
 2d8:	88 0f       	add	r24, r24
 2da:	99 1f       	adc	r25, r25
 2dc:	6a 95       	dec	r22
 2de:	e2 f7       	brpl	.-8      	; 0x2d8 <MDIO_VoidTogglePin+0x2e>
 2e0:	82 27       	eor	r24, r18
 2e2:	88 bb       	out	0x18, r24	; 24
 2e4:	08 95       	ret
		case PORTC: TOGGLE_BIT(PORTC_REG,Copy_U8Pin); break;
 2e6:	25 b3       	in	r18, 0x15	; 21
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	02 c0       	rjmp	.+4      	; 0x2f2 <MDIO_VoidTogglePin+0x48>
 2ee:	88 0f       	add	r24, r24
 2f0:	99 1f       	adc	r25, r25
 2f2:	6a 95       	dec	r22
 2f4:	e2 f7       	brpl	.-8      	; 0x2ee <MDIO_VoidTogglePin+0x44>
 2f6:	82 27       	eor	r24, r18
 2f8:	85 bb       	out	0x15, r24	; 21
 2fa:	08 95       	ret
		case PORTD: TOGGLE_BIT(PORTD_REG,Copy_U8Pin); break;
 2fc:	22 b3       	in	r18, 0x12	; 18
 2fe:	81 e0       	ldi	r24, 0x01	; 1
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	02 c0       	rjmp	.+4      	; 0x308 <MDIO_VoidTogglePin+0x5e>
 304:	88 0f       	add	r24, r24
 306:	99 1f       	adc	r25, r25
 308:	6a 95       	dec	r22
 30a:	e2 f7       	brpl	.-8      	; 0x304 <MDIO_VoidTogglePin+0x5a>
 30c:	82 27       	eor	r24, r18
 30e:	82 bb       	out	0x12, r24	; 18
 310:	08 95       	ret

00000312 <MGIE_VoidEnable>:
#include "BIT_MATH.h"
#include "MGIE_Private.h"

void MGIE_VoidEnable(void)
{
	SET_BIT(SREG,7);
 312:	8f b7       	in	r24, 0x3f	; 63
 314:	80 68       	ori	r24, 0x80	; 128
 316:	8f bf       	out	0x3f, r24	; 63
 318:	08 95       	ret

0000031a <MTimer0_VoidInitOV>:

void MTimer0_voidDisableTimer(void)
{
	CLR_BIT(TCCR0,2);
	CLR_BIT(TCCR0,1);
	CLR_BIT(TCCR0,0);
 31a:	83 b7       	in	r24, 0x33	; 51
 31c:	80 7b       	andi	r24, 0xB0	; 176
 31e:	83 bf       	out	0x33, r24	; 51
 320:	89 b7       	in	r24, 0x39	; 57
 322:	81 60       	ori	r24, 0x01	; 1
 324:	89 bf       	out	0x39, r24	; 57
 326:	08 95       	ret

00000328 <MTimer0_VoidSetTCNT>:
 328:	82 bf       	out	0x32, r24	; 50
 32a:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <TCNT_Value>
 32e:	08 95       	ret

00000330 <MTimer0_ViodEnableTimer>:
 330:	83 b7       	in	r24, 0x33	; 51
 332:	88 7f       	andi	r24, 0xF8	; 248
 334:	85 60       	ori	r24, 0x05	; 5
 336:	83 bf       	out	0x33, r24	; 51
 338:	08 95       	ret

0000033a <MTimer0_VoidSetCallBack>:
}

void MTimer0_VoidSetCallBack(void (*P_func)(void))
{
	PGlb_Func = P_func;
 33a:	90 93 58 01 	sts	0x0158, r25	; 0x800158 <PGlb_Func+0x1>
 33e:	80 93 57 01 	sts	0x0157, r24	; 0x800157 <PGlb_Func>
 342:	08 95       	ret

00000344 <__vector_11>:
}
void __vector_11(void)
{
 344:	1f 92       	push	r1
 346:	0f 92       	push	r0
 348:	0f b6       	in	r0, 0x3f	; 63
 34a:	0f 92       	push	r0
 34c:	11 24       	eor	r1, r1
 34e:	2f 93       	push	r18
 350:	3f 93       	push	r19
 352:	4f 93       	push	r20
 354:	5f 93       	push	r21
 356:	6f 93       	push	r22
 358:	7f 93       	push	r23
 35a:	8f 93       	push	r24
 35c:	9f 93       	push	r25
 35e:	af 93       	push	r26
 360:	bf 93       	push	r27
 362:	ef 93       	push	r30
 364:	ff 93       	push	r31
	PGlb_Func();
 366:	e0 91 57 01 	lds	r30, 0x0157	; 0x800157 <PGlb_Func>
 36a:	f0 91 58 01 	lds	r31, 0x0158	; 0x800158 <PGlb_Func+0x1>
 36e:	09 95       	icall
}
 370:	ff 91       	pop	r31
 372:	ef 91       	pop	r30
 374:	bf 91       	pop	r27
 376:	af 91       	pop	r26
 378:	9f 91       	pop	r25
 37a:	8f 91       	pop	r24
 37c:	7f 91       	pop	r23
 37e:	6f 91       	pop	r22
 380:	5f 91       	pop	r21
 382:	4f 91       	pop	r20
 384:	3f 91       	pop	r19
 386:	2f 91       	pop	r18
 388:	0f 90       	pop	r0
 38a:	0f be       	out	0x3f, r0	; 63
 38c:	0f 90       	pop	r0
 38e:	1f 90       	pop	r1
 390:	18 95       	reti

00000392 <Scheduler>:
		Local_ErrorState = 100;
		return Local_ErrorState;

	}	
	
}
 392:	1f 93       	push	r17
 394:	cf 93       	push	r28
 396:	df 93       	push	r29
 398:	10 e0       	ldi	r17, 0x00	; 0
 39a:	9e c0       	rjmp	.+316    	; 0x4d8 <__EEPROM_REGION_LENGTH__+0xd8>
 39c:	c1 2f       	mov	r28, r17
 39e:	d0 e0       	ldi	r29, 0x00	; 0
 3a0:	fe 01       	movw	r30, r28
 3a2:	ee 0f       	add	r30, r30
 3a4:	ff 1f       	adc	r31, r31
 3a6:	ec 0f       	add	r30, r28
 3a8:	fd 1f       	adc	r31, r29
 3aa:	ee 0f       	add	r30, r30
 3ac:	ff 1f       	adc	r31, r31
 3ae:	ee 0f       	add	r30, r30
 3b0:	ff 1f       	adc	r31, r31
 3b2:	ea 59       	subi	r30, 0x9A	; 154
 3b4:	ff 4f       	sbci	r31, 0xFF	; 255
 3b6:	01 90       	ld	r0, Z+
 3b8:	f0 81       	ld	r31, Z
 3ba:	e0 2d       	mov	r30, r0
 3bc:	30 97       	sbiw	r30, 0x00	; 0
 3be:	09 f4       	brne	.+2      	; 0x3c2 <Scheduler+0x30>
 3c0:	8a c0       	rjmp	.+276    	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 3c2:	de 01       	movw	r26, r28
 3c4:	aa 0f       	add	r26, r26
 3c6:	bb 1f       	adc	r27, r27
 3c8:	ac 0f       	add	r26, r28
 3ca:	bd 1f       	adc	r27, r29
 3cc:	aa 0f       	add	r26, r26
 3ce:	bb 1f       	adc	r27, r27
 3d0:	aa 0f       	add	r26, r26
 3d2:	bb 1f       	adc	r27, r27
 3d4:	aa 59       	subi	r26, 0x9A	; 154
 3d6:	bf 4f       	sbci	r27, 0xFF	; 255
 3d8:	19 96       	adiw	r26, 0x09	; 9
 3da:	8c 91       	ld	r24, X
 3dc:	81 11       	cpse	r24, r1
 3de:	36 c0       	rjmp	.+108    	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 3e0:	de 01       	movw	r26, r28
 3e2:	aa 0f       	add	r26, r26
 3e4:	bb 1f       	adc	r27, r27
 3e6:	ac 0f       	add	r26, r28
 3e8:	bd 1f       	adc	r27, r29
 3ea:	aa 0f       	add	r26, r26
 3ec:	bb 1f       	adc	r27, r27
 3ee:	aa 0f       	add	r26, r26
 3f0:	bb 1f       	adc	r27, r27
 3f2:	aa 59       	subi	r26, 0x9A	; 154
 3f4:	bf 4f       	sbci	r27, 0xFF	; 255
 3f6:	17 96       	adiw	r26, 0x07	; 7
 3f8:	2d 91       	ld	r18, X+
 3fa:	3c 91       	ld	r19, X
 3fc:	18 97       	sbiw	r26, 0x08	; 8
 3fe:	21 15       	cp	r18, r1
 400:	31 05       	cpc	r19, r1
 402:	a1 f4       	brne	.+40     	; 0x42c <__EEPROM_REGION_LENGTH__+0x2c>
 404:	09 95       	icall
 406:	ce 01       	movw	r24, r28
 408:	88 0f       	add	r24, r24
 40a:	99 1f       	adc	r25, r25
 40c:	fc 01       	movw	r30, r24
 40e:	ec 0f       	add	r30, r28
 410:	fd 1f       	adc	r31, r29
 412:	ee 0f       	add	r30, r30
 414:	ff 1f       	adc	r31, r31
 416:	ee 0f       	add	r30, r30
 418:	ff 1f       	adc	r31, r31
 41a:	ea 59       	subi	r30, 0x9A	; 154
 41c:	ff 4f       	sbci	r31, 0xFF	; 255
 41e:	22 e0       	ldi	r18, 0x02	; 2
 420:	21 87       	std	Z+9, r18	; 0x09
 422:	23 81       	ldd	r18, Z+3	; 0x03
 424:	34 81       	ldd	r19, Z+4	; 0x04
 426:	30 87       	std	Z+8, r19	; 0x08
 428:	27 83       	std	Z+7, r18	; 0x07
 42a:	55 c0       	rjmp	.+170    	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 42c:	ce 01       	movw	r24, r28
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	c8 0f       	add	r28, r24
 434:	d9 1f       	adc	r29, r25
 436:	cc 0f       	add	r28, r28
 438:	dd 1f       	adc	r29, r29
 43a:	cc 0f       	add	r28, r28
 43c:	dd 1f       	adc	r29, r29
 43e:	ca 59       	subi	r28, 0x9A	; 154
 440:	df 4f       	sbci	r29, 0xFF	; 255
 442:	21 50       	subi	r18, 0x01	; 1
 444:	31 09       	sbc	r19, r1
 446:	38 87       	std	Y+8, r19	; 0x08
 448:	2f 83       	std	Y+7, r18	; 0x07
 44a:	45 c0       	rjmp	.+138    	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 44c:	82 30       	cpi	r24, 0x02	; 2
 44e:	11 f5       	brne	.+68     	; 0x494 <__EEPROM_REGION_LENGTH__+0x94>
 450:	fe 01       	movw	r30, r28
 452:	ee 0f       	add	r30, r30
 454:	ff 1f       	adc	r31, r31
 456:	ec 0f       	add	r30, r28
 458:	fd 1f       	adc	r31, r29
 45a:	ee 0f       	add	r30, r30
 45c:	ff 1f       	adc	r31, r31
 45e:	ee 0f       	add	r30, r30
 460:	ff 1f       	adc	r31, r31
 462:	ea 59       	subi	r30, 0x9A	; 154
 464:	ff 4f       	sbci	r31, 0xFF	; 255
 466:	27 81       	ldd	r18, Z+7	; 0x07
 468:	30 85       	ldd	r19, Z+8	; 0x08
 46a:	21 15       	cp	r18, r1
 46c:	31 05       	cpc	r19, r1
 46e:	11 f4       	brne	.+4      	; 0x474 <__EEPROM_REGION_LENGTH__+0x74>
 470:	11 86       	std	Z+9, r1	; 0x09
 472:	31 c0       	rjmp	.+98     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 474:	ce 01       	movw	r24, r28
 476:	88 0f       	add	r24, r24
 478:	99 1f       	adc	r25, r25
 47a:	c8 0f       	add	r28, r24
 47c:	d9 1f       	adc	r29, r25
 47e:	cc 0f       	add	r28, r28
 480:	dd 1f       	adc	r29, r29
 482:	cc 0f       	add	r28, r28
 484:	dd 1f       	adc	r29, r29
 486:	ca 59       	subi	r28, 0x9A	; 154
 488:	df 4f       	sbci	r29, 0xFF	; 255
 48a:	21 50       	subi	r18, 0x01	; 1
 48c:	31 09       	sbc	r19, r1
 48e:	38 87       	std	Y+8, r19	; 0x08
 490:	2f 83       	std	Y+7, r18	; 0x07
 492:	21 c0       	rjmp	.+66     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 494:	81 30       	cpi	r24, 0x01	; 1
 496:	f9 f4       	brne	.+62     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 498:	fe 01       	movw	r30, r28
 49a:	ee 0f       	add	r30, r30
 49c:	ff 1f       	adc	r31, r31
 49e:	ec 0f       	add	r30, r28
 4a0:	fd 1f       	adc	r31, r29
 4a2:	ee 0f       	add	r30, r30
 4a4:	ff 1f       	adc	r31, r31
 4a6:	ee 0f       	add	r30, r30
 4a8:	ff 1f       	adc	r31, r31
 4aa:	ea 59       	subi	r30, 0x9A	; 154
 4ac:	ff 4f       	sbci	r31, 0xFF	; 255
 4ae:	82 85       	ldd	r24, Z+10	; 0x0a
 4b0:	93 85       	ldd	r25, Z+11	; 0x0b
 4b2:	00 97       	sbiw	r24, 0x00	; 0
 4b4:	11 f4       	brne	.+4      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
 4b6:	11 86       	std	Z+9, r1	; 0x09
 4b8:	0e c0       	rjmp	.+28     	; 0x4d6 <__EEPROM_REGION_LENGTH__+0xd6>
 4ba:	9e 01       	movw	r18, r28
 4bc:	22 0f       	add	r18, r18
 4be:	33 1f       	adc	r19, r19
 4c0:	c2 0f       	add	r28, r18
 4c2:	d3 1f       	adc	r29, r19
 4c4:	cc 0f       	add	r28, r28
 4c6:	dd 1f       	adc	r29, r29
 4c8:	cc 0f       	add	r28, r28
 4ca:	dd 1f       	adc	r29, r29
 4cc:	ca 59       	subi	r28, 0x9A	; 154
 4ce:	df 4f       	sbci	r29, 0xFF	; 255
 4d0:	01 97       	sbiw	r24, 0x01	; 1
 4d2:	9b 87       	std	Y+11, r25	; 0x0b
 4d4:	8a 87       	std	Y+10, r24	; 0x0a
 4d6:	1f 5f       	subi	r17, 0xFF	; 255
 4d8:	14 31       	cpi	r17, 0x14	; 20
 4da:	08 f4       	brcc	.+2      	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
 4dc:	5f cf       	rjmp	.-322    	; 0x39c <Scheduler+0xa>
 4de:	df 91       	pop	r29
 4e0:	cf 91       	pop	r28
 4e2:	1f 91       	pop	r17
 4e4:	08 95       	ret

000004e6 <RTOS_u8CreateTask>:
 4e6:	65 31       	cpi	r22, 0x15	; 21
 4e8:	80 f5       	brcc	.+96     	; 0x54a <RTOS_u8CreateTask+0x64>
 4ea:	70 e0       	ldi	r23, 0x00	; 0
 4ec:	fb 01       	movw	r30, r22
 4ee:	ee 0f       	add	r30, r30
 4f0:	ff 1f       	adc	r31, r31
 4f2:	e6 0f       	add	r30, r22
 4f4:	f7 1f       	adc	r31, r23
 4f6:	ee 0f       	add	r30, r30
 4f8:	ff 1f       	adc	r31, r31
 4fa:	ee 0f       	add	r30, r30
 4fc:	ff 1f       	adc	r31, r31
 4fe:	ea 59       	subi	r30, 0x9A	; 154
 500:	ff 4f       	sbci	r31, 0xFF	; 255
 502:	01 90       	ld	r0, Z+
 504:	f0 81       	ld	r31, Z
 506:	e0 2d       	mov	r30, r0
 508:	ef 2b       	or	r30, r31
 50a:	09 f5       	brne	.+66     	; 0x54e <RTOS_u8CreateTask+0x68>
 50c:	fb 01       	movw	r30, r22
 50e:	ee 0f       	add	r30, r30
 510:	ff 1f       	adc	r31, r31
 512:	df 01       	movw	r26, r30
 514:	a6 0f       	add	r26, r22
 516:	b7 1f       	adc	r27, r23
 518:	aa 0f       	add	r26, r26
 51a:	bb 1f       	adc	r27, r27
 51c:	aa 0f       	add	r26, r26
 51e:	bb 1f       	adc	r27, r27
 520:	aa 59       	subi	r26, 0x9A	; 154
 522:	bf 4f       	sbci	r27, 0xFF	; 255
 524:	11 96       	adiw	r26, 0x01	; 1
 526:	9c 93       	st	X, r25
 528:	8e 93       	st	-X, r24
 52a:	14 96       	adiw	r26, 0x04	; 4
 52c:	5c 93       	st	X, r21
 52e:	4e 93       	st	-X, r20
 530:	13 97       	sbiw	r26, 0x03	; 3
 532:	16 96       	adiw	r26, 0x06	; 6
 534:	3c 93       	st	X, r19
 536:	2e 93       	st	-X, r18
 538:	15 97       	sbiw	r26, 0x05	; 5
 53a:	18 96       	adiw	r26, 0x08	; 8
 53c:	3c 93       	st	X, r19
 53e:	2e 93       	st	-X, r18
 540:	17 97       	sbiw	r26, 0x07	; 7
 542:	fd 01       	movw	r30, r26
 544:	11 86       	std	Z+9, r1	; 0x09
 546:	80 e0       	ldi	r24, 0x00	; 0
 548:	08 95       	ret
 54a:	82 e0       	ldi	r24, 0x02	; 2
 54c:	08 95       	ret
 54e:	81 e0       	ldi	r24, 0x01	; 1
 550:	08 95       	ret

00000552 <RTOS_voidStartOS>:
	
}

void RTOS_voidStartOS(void)
{
	MTimer0_VoidSetCallBack(Scheduler);
 552:	89 ec       	ldi	r24, 0xC9	; 201
 554:	91 e0       	ldi	r25, 0x01	; 1
 556:	0e 94 9d 01 	call	0x33a	; 0x33a <MTimer0_VoidSetCallBack>
 55a:	08 95       	ret

0000055c <_exit>:
 55c:	f8 94       	cli

0000055e <__stop_program>:
 55e:	ff cf       	rjmp	.-2      	; 0x55e <__stop_program>
